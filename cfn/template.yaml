Resources:
  vpcA2121C38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.30.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/Resource
  vpcPublicSubnet1Subnet2E65531E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.0.0/19
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet1/Subnet
  vpcPublicSubnet1RouteTable48A2DF9B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet1/RouteTable
  vpcPublicSubnet1RouteTableAssociation5D3F4579:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet1/RouteTableAssociation
  vpcPublicSubnet1DefaultRoute10708846:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet1RouteTable48A2DF9B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet1/DefaultRoute
  vpcPublicSubnet1EIPDA49DCBE:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet1/EIP
  vpcPublicSubnet1NATGateway9C16659E:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: vpcPublicSubnet1Subnet2E65531E
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet1EIPDA49DCBE
          - AllocationId
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet1/NATGateway
  vpcPublicSubnet2Subnet009B674F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.32.0/19
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet2/Subnet
  vpcPublicSubnet2RouteTableEB40D4CB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet2/RouteTable
  vpcPublicSubnet2RouteTableAssociation21F81B59:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet2/RouteTableAssociation
  vpcPublicSubnet2DefaultRouteA1EC0F60:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet2RouteTableEB40D4CB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet2/DefaultRoute
  vpcPublicSubnet2EIP9B3743B1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet2/EIP
  vpcPublicSubnet2NATGateway9B8AE11A:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: vpcPublicSubnet2Subnet009B674F
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet2EIP9B3743B1
          - AllocationId
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet2/NATGateway
  vpcPublicSubnet3Subnet11B92D7C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.64.0/19
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone: us-east-1c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet3
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet3/Subnet
  vpcPublicSubnet3RouteTableA3C00665:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet3
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet3/RouteTable
  vpcPublicSubnet3RouteTableAssociationD102D1C4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet3RouteTableA3C00665
      SubnetId:
        Ref: vpcPublicSubnet3Subnet11B92D7C
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet3/RouteTableAssociation
  vpcPublicSubnet3DefaultRoute3F356A11:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPublicSubnet3RouteTableA3C00665
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: vpcIGWE57CBDCA
    DependsOn:
      - vpcVPCGW7984C166
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet3/DefaultRoute
  vpcPublicSubnet3EIP2C3B9D91:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet3
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet3/EIP
  vpcPublicSubnet3NATGateway82F6CA9E:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: vpcPublicSubnet3Subnet11B92D7C
      AllocationId:
        Fn::GetAtt:
          - vpcPublicSubnet3EIP2C3B9D91
          - AllocationId
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PublicSubnet3
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PublicSubnet3/NATGateway
  vpcPrivateSubnet1Subnet934893E8:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.96.0/19
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: msk-demo-stack/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet1/Subnet
  vpcPrivateSubnet1RouteTableB41A48CC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet1/RouteTable
  vpcPrivateSubnet1RouteTableAssociation67945127:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      SubnetId:
        Ref: vpcPrivateSubnet1Subnet934893E8
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet1/RouteTableAssociation
  vpcPrivateSubnet1DefaultRoute1AA8E2E5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet1RouteTableB41A48CC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet1NATGateway9C16659E
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet1/DefaultRoute
  vpcPrivateSubnet2Subnet7031C2BA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.128.0/19
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: msk-demo-stack/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet2/Subnet
  vpcPrivateSubnet2RouteTable7280F23E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet2/RouteTable
  vpcPrivateSubnet2RouteTableAssociation007E94D3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      SubnetId:
        Ref: vpcPrivateSubnet2Subnet7031C2BA
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet2/RouteTableAssociation
  vpcPrivateSubnet2DefaultRouteB0E07F99:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet2RouteTable7280F23E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet2NATGateway9B8AE11A
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet2/DefaultRoute
  vpcPrivateSubnet3Subnet985AC459:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.160.0/19
      VpcId:
        Ref: vpcA2121C38
      AvailabilityZone: us-east-1c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: msk-demo-stack/vpc/PrivateSubnet3
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet3/Subnet
  vpcPrivateSubnet3RouteTable24DA79A0:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: vpcA2121C38
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc/PrivateSubnet3
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet3/RouteTable
  vpcPrivateSubnet3RouteTableAssociationC58B3C2C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet3RouteTable24DA79A0
      SubnetId:
        Ref: vpcPrivateSubnet3Subnet985AC459
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet3/RouteTableAssociation
  vpcPrivateSubnet3DefaultRoute30C45F47:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: vpcPrivateSubnet3RouteTable24DA79A0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: vpcPublicSubnet3NATGateway82F6CA9E
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/PrivateSubnet3/DefaultRoute
  vpcIGWE57CBDCA:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: msk-demo-stack/vpc
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/IGW
  vpcVPCGW7984C166:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: vpcA2121C38
      InternetGatewayId:
        Ref: vpcIGWE57CBDCA
    Metadata:
      aws:cdk:path: msk-demo-stack/vpc/VPCGW
  lambdasg93781054:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: msk-demo-stack/lambda-sg
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: msk-demo-stack/lambda-sg/Resource
  ProxytoDBConnectionC580BD64:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: msk-demo-stack/Proxy to DB Connection
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: msk-demo-stack/Proxy to DB Connection/Resource
  ProxytoDBConnectionfrommskdemostackProxytoDBConnection7FF580BC3306FEA86ACD:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: allow db connection
      FromPort: 3306
      GroupId:
        Fn::GetAtt:
          - ProxytoDBConnectionC580BD64
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ProxytoDBConnectionC580BD64
          - GroupId
      ToPort: 3306
    Metadata:
      aws:cdk:path: msk-demo-stack/Proxy to DB Connection/from mskdemostackProxytoDBConnection7FF580BC:3306
  ProxytoDBConnectionfrommskdemostacklambdasg03E083683306CDC0ADF6:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: allow lambda connection
      FromPort: 3306
      GroupId:
        Fn::GetAtt:
          - ProxytoDBConnectionC580BD64
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - lambdasg93781054
          - GroupId
      ToPort: 3306
    Metadata:
      aws:cdk:path: msk-demo-stack/Proxy to DB Connection/from mskdemostacklambdasg03E08368:3306
  ProxytoDBConnectionfrommskdemostackProxytoDBConnection7FF580BCIndirectPortB475F1AE:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Allow connections to the database Cluster from the Proxy
      FromPort:
        Fn::GetAtt:
          - auroramysqldb5D6E2C78
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - ProxytoDBConnectionC580BD64
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ProxytoDBConnectionC580BD64
          - GroupId
      ToPort:
        Fn::GetAtt:
          - auroramysqldb5D6E2C78
          - Endpoint.Port
    Metadata:
      aws:cdk:path: msk-demo-stack/Proxy to DB Connection/from mskdemostackProxytoDBConnection7FF580BC:{IndirectPort}
  mskSecurityGroup06530AC0:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MSK security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: vpcA2121C38
    Metadata:
      aws:cdk:path: msk-demo-stack/msk/SecurityGroup/Resource
  msk728F0B66:
    Type: AWS::MSK::Cluster
    Properties:
      BrokerNodeGroupInfo:
        ClientSubnets:
          - Ref: vpcPrivateSubnet1Subnet934893E8
          - Ref: vpcPrivateSubnet2Subnet7031C2BA
          - Ref: vpcPrivateSubnet3Subnet985AC459
        InstanceType: kafka.m5.large
        SecurityGroups:
          - Fn::GetAtt:
              - mskSecurityGroup06530AC0
              - GroupId
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 1000
      ClusterName: msk-demo
      KafkaVersion: 2.8.0
      NumberOfBrokerNodes: 3
      EncryptionInfo:
        EncryptionInTransit:
          ClientBroker: TLS
          InCluster: true
      LoggingInfo:
        BrokerLogs:
          CloudWatchLogs:
            Enabled: false
          Firehose:
            Enabled: false
          S3:
            Enabled: false
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: msk-demo-stack/msk/Resource
  rdsproxysecret8FA5AAA4:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        IncludeSpace: false
        SecretStringTemplate: '{"username":"admin"}'
      Name: msk-demo-stack-rds-credentials
    Metadata:
      aws:cdk:path: msk-demo-stack/rds-proxy-secret/Resource
  rdsproxysecretAttachment706D0885:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: rdsproxysecret8FA5AAA4
      TargetId:
        Ref: auroramysqldb5D6E2C78
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: msk-demo-stack/rds-proxy-secret/Attachment/Resource
  auroramysqldbSubnets19C6AE0F:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for aurora-mysql-db database
      SubnetIds:
        - Ref: vpcPrivateSubnet1Subnet934893E8
        - Ref: vpcPrivateSubnet2Subnet7031C2BA
        - Ref: vpcPrivateSubnet3Subnet985AC459
    Metadata:
      aws:cdk:path: msk-demo-stack/aurora-mysql-db/Subnets/Default
  auroramysqldb5D6E2C78:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      CopyTagsToSnapshot: true
      DBClusterParameterGroupName: default.aurora-mysql5.7
      DBSubnetGroupName:
        Ref: auroramysqldbSubnets19C6AE0F
      EngineVersion: 5.7.mysql_aurora.2.09.2
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: rdsproxysecret8FA5AAA4
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: rdsproxysecret8FA5AAA4
            - :SecretString:password::}}
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - ProxytoDBConnectionC580BD64
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: msk-demo-stack/aurora-mysql-db/Resource
  auroramysqldbInstance1C1D8D786:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier:
        Ref: auroramysqldb5D6E2C78
      DBSubnetGroupName:
        Ref: auroramysqldbSubnets19C6AE0F
      Engine: aurora-mysql
      EngineVersion: 5.7.mysql_aurora.2.09.2
      PubliclyAccessible: false
    DependsOn:
      - vpcPrivateSubnet1DefaultRoute1AA8E2E5
      - vpcPrivateSubnet2DefaultRouteB0E07F99
      - vpcPrivateSubnet3DefaultRoute30C45F47
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: msk-demo-stack/aurora-mysql-db/Instance1
  auroramysqldbInstance280F5FF7E:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.medium
      DBClusterIdentifier:
        Ref: auroramysqldb5D6E2C78
      DBSubnetGroupName:
        Ref: auroramysqldbSubnets19C6AE0F
      Engine: aurora-mysql
      EngineVersion: 5.7.mysql_aurora.2.09.2
      PubliclyAccessible: false
    DependsOn:
      - vpcPrivateSubnet1DefaultRoute1AA8E2E5
      - vpcPrivateSubnet2DefaultRouteB0E07F99
      - vpcPrivateSubnet3DefaultRoute30C45F47
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: msk-demo-stack/aurora-mysql-db/Instance2
  auroramysqldbrdsproxyIAMRole2EFDB659:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: msk-demo-stack/aurora-mysql-db/rds-proxy/IAMRole/Resource
  auroramysqldbrdsproxyIAMRoleDefaultPolicy39B5F806:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: rdsproxysecret8FA5AAA4
        Version: "2012-10-17"
      PolicyName: auroramysqldbrdsproxyIAMRoleDefaultPolicy39B5F806
      Roles:
        - Ref: auroramysqldbrdsproxyIAMRole2EFDB659
    Metadata:
      aws:cdk:path: msk-demo-stack/aurora-mysql-db/rds-proxy/IAMRole/DefaultPolicy/Resource
  auroramysqldbrdsproxy779D2521:
    Type: AWS::RDS::DBProxy
    Properties:
      Auth:
        - AuthScheme: SECRETS
          IAMAuth: DISABLED
          SecretArn:
            Ref: rdsproxysecret8FA5AAA4
      DBProxyName: rds-proxy
      EngineFamily: MYSQL
      RoleArn:
        Fn::GetAtt:
          - auroramysqldbrdsproxyIAMRole2EFDB659
          - Arn
      VpcSubnetIds:
        - Ref: vpcPrivateSubnet1Subnet934893E8
        - Ref: vpcPrivateSubnet2Subnet7031C2BA
        - Ref: vpcPrivateSubnet3Subnet985AC459
      RequireTLS: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - ProxytoDBConnectionC580BD64
            - GroupId
    Metadata:
      aws:cdk:path: msk-demo-stack/aurora-mysql-db/rds-proxy/Resource
  auroramysqldbrdsproxyProxyTargetGroupC521B4BE:
    Type: AWS::RDS::DBProxyTargetGroup
    Properties:
      DBProxyName:
        Ref: auroramysqldbrdsproxy779D2521
      TargetGroupName: default
      ConnectionPoolConfigurationInfo: {}
      DBClusterIdentifiers:
        - Ref: auroramysqldb5D6E2C78
    DependsOn:
      - auroramysqldbInstance1C1D8D786
      - auroramysqldbInstance280F5FF7E
      - auroramysqldbrdsproxyIAMRoleDefaultPolicy39B5F806
      - auroramysqldbrdsproxyIAMRole2EFDB659
      - auroramysqldbrdsproxy779D2521
      - auroramysqldb5D6E2C78
      - auroramysqldbSubnets19C6AE0F
    Metadata:
      aws:cdk:path: msk-demo-stack/aurora-mysql-db/rds-proxy/ProxyTargetGroup
  dbproxylambdaServiceRole944DBBD9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: msk-demo-stack/db-proxy-lambda/ServiceRole/Resource
  dbproxylambdaServiceRoleDefaultPolicy7C775A73:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":rds-db:us-east-1:594518549660:dbuser:"
                  - Fn::Select:
                      - 6
                      - Fn::Split:
                          - ":"
                          - Fn::GetAtt:
                              - auroramysqldbrdsproxy779D2521
                              - DBProxyArn
                  - "/{{resolve:secretsmanager:"
                  - Ref: rdsproxysecret8FA5AAA4
                  - :SecretString:username::}}
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: rdsproxysecret8FA5AAA4
        Version: "2012-10-17"
      PolicyName: dbproxylambdaServiceRoleDefaultPolicy7C775A73
      Roles:
        - Ref: dbproxylambdaServiceRole944DBBD9
    Metadata:
      aws:cdk:path: msk-demo-stack/db-proxy-lambda/ServiceRole/DefaultPolicy/Resource
  dbproxylambdaDA3ADA80:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172eS3BucketB3251FB1
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172eS3VersionKey38381DF9
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172eS3VersionKey38381DF9
      Role:
        Fn::GetAtt:
          - dbproxylambdaServiceRole944DBBD9
          - Arn
      Environment:
        Variables:
          PROXY_ENDPOINT:
            Fn::GetAtt:
              - auroramysqldbrdsproxy779D2521
              - Endpoint
          RDS_SECRET_NAME: msk-demo-stack-rds-credentials
      Handler: app.handler
      Runtime: nodejs14.x
      Timeout: 30
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdasg93781054
              - GroupId
        SubnetIds:
          - Ref: vpcPrivateSubnet1Subnet934893E8
          - Ref: vpcPrivateSubnet2Subnet7031C2BA
          - Ref: vpcPrivateSubnet3Subnet985AC459
    DependsOn:
      - dbproxylambdaServiceRoleDefaultPolicy7C775A73
      - dbproxylambdaServiceRole944DBBD9
    Metadata:
      aws:cdk:path: msk-demo-stack/db-proxy-lambda/Resource
      aws:asset:path: asset.e461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172e
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE31STU/DMAz9LdyzjILgzNrB1Auquml3NzUla5tMibMxVf3vpF/rNCROfv7I84vtgAfBC398eIOzXYi8XDZCG+TNlkCULEWrnRHIVtYi+VghVcEirSwZJ4hFXyoBAzUSms6Z6lvW0TUonnizP4outU8ilriskmLrMoX92xml2hHuIKtwjs8x310LCSS1uhZ34D1OOvMJtAHCM1xYYuTJw5k4Vl6ax1PBoGT0VuR/+V2jIrZF4Yyky8Zod+w1/BuIVWHQ2pbVtuRNVDk7TmCELbMoDJKtQUGBxg+090eiDg1mB6ZAuhFyLbjPtMzkljdrIMjA4tRz+OpV5Tr8E7hRtw5jvzpQfqMTT2L0z2XI3cNBQc/UMgk1b1I9LKi3ifbL7OsH1LIK6iwH3nw4JaZlTdhP5HkB3RlZ3l+T93noRIkUehlty5TOkR/s8hS88u4kD1bKhXGKZI08Hewv8U0CmK8CAAA=
    Metadata:
      aws:cdk:path: msk-demo-stack/CDKMetadata/Default
Parameters:
  AssetParameterse461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172eS3BucketB3251FB1:
    Type: String
    Description: S3 bucket for asset "e461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172e"
  AssetParameterse461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172eS3VersionKey38381DF9:
    Type: String
    Description: S3 key for asset version "e461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172e"
  AssetParameterse461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172eArtifactHashED68D20C:
    Type: String
    Description: Artifact hash for asset "e461a416d8256a212581242126178654db4f4d97051f3354fb0d0c1f151d172e"

